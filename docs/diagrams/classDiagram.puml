@startuml Class Diagram
title Class Diagram

package "core module" <<Rectangle>>{
    package core <<Rectangle>> {
        class Validation{
            EARLIEST_VALID_DATE = LocalDate.of(2000, 1, 1): LocalDate 
            LATEST_VALID_DATE = LocalDate.of(2030, 12, 30): LocalDate 
            MIN_NAME_LENGTH = 2: int 
            MIN_DESCRIPTION_LENGTH = 0: int 
            MIN_LOCATION_LENGTH = 2: int 
            enum ErrorType
            isValidTextInput(String input, InputType inputType): boolean
            isValidDateInput(LocalDate date): boolean
            areValidDateInputs(LocalDate startDate, LocalDate endDate): boolean
            isValidEventType(String comboBoxInput): boolean
            isStartBeforeEnd(LocalDate startDate, String startTime, LocalDate endDate, String endTime): boolean
            isValidTimeString(String timeString): boolean
            isValidName(String name): boolean
            isValidLocation(String location): boolean
            isValidDescription(String desc): boolean
            getTimeArray(String timeString): int[]
        }

        class record_User{
            email: String 
            password: String 
            anove18: boolean 
            <<constructor>> User(String email, String password, boolean above18)
        }

        class Event{
            type: EventType 
            name: String 
            startDate: LocalDateTime 
            endDate: LocalDateTime 
            location: String 
            authorEmail: String 
            description: String 
            users: List<User>
            <<constructor>> Event(EventType type, String name, LocalDateTime localDateTime, \nLocalDateTime localDateTime2, String location, List<User> users, 
                String authorEmail, String description)
            <<constructor>> Event(EventType type, String name, LocalDateTime localDateTime,
                    LocalDateTime localDateTime2, String location)
            getUsers(): List<User> 
            getType(): EventType 
            getName(): String 
        }

        class enum_EventType{
            CONCERT,
            QUIZ,
            COURSE,
            PARTY
        }

        class UserUtil{
            passwordHash(String password): String
            deHash(String password): String
        }
    }

    package json <<Rectangle>> {
        class EventSerializer{
            serialize(Event event, JsonGenerator jsonGen, 
            SerializerProvider serializerProvider): void 
        }

        class EventDeserializer{
            deserialize(JsonParser jsonParser, 
            DeserializationContext context): Event
        }

        class UserDeserializer{
            deserialize(JsonParser jsonParser, 
            DeserializationContext context): User
        }

        class UserSerializer{
            serialize(User user, JsonGenerator jsonGen, 
            SerializerProvider serializerProvider): void
        }

        class EventCollectionJsonReader{
            load(File file): Collection<Event>
            load(): Collection<Event> 
        }

        class EventCollectionJsonWriter{
            <<constructor>> EventCollectionJsonWriter()
            save(final Collection<Event> collection, File file): void
            save(final Collection<Event> collection): void 
            save(final Event event, File file): void 
            save(final Event event): void
        }

        class UserCollectionJsonReader{
            <<constructor>> UserCollectionJsonReader()
            load(File file): Collection<User> 
            load(): Collection<User> 
        }

        class UserCollectionJsonWriter{
            <<constructor>> UserCollectionJsonWriter()
            save(final Collection<User> collection, File file): void
            save(final Collection<User> collection): void 
            save(final User user, File file): void
            save(final User user): void 
        }

        class IOUtil{
            **Static utility methods**
        }
    }
}


Event -- record_User
Event -- enum_EventType
record_User -- Validation
record_User -- UserUtil
Event -- IOUtil
record_User -- IOUtil
EventCollectionJsonReader -- Event
EventCollectionJsonReader -up- IOUtil
EventCollectionJsonWriter -- Event
EventCollectionJsonWriter -up- IOUtil
EventDeserializer -- record_User
EventDeserializer -- Event
EventDeserializer -- enum_EventType
EventSerializer -left- Event
EventSerializer -left- record_User
UserCollectionJsonReader -- record_User
UserCollectionJsonReader -left- IOUtil
UserCollectionJsonWriter -down- record_User
UserCollectionJsonWriter -down- IOUtil
UserDeserializer -- record_User
UserDeserializer -right- UserUtil
UserSerializer -- record_User

@enduml